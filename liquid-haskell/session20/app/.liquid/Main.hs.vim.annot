1:1-1:1::Main.$trModule :: "GHC.Types.Module"
9:1-9:5:::Main.main :: "(GHC.Types.IO ())"
10:5-10:28::lq_anf$##7205759403793676217 :: "(GHC.Types.IO ())"
10:14-10:28::lq_anf$##7205759403793676216 :: "[GHC.Types.Char]"
12:5-12:82::lq_anf$##7205759403793676224 :: "(GHC.Types.IO ())"
12:6-12:14::System.IO.putStrLn :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
12:17-12:21::lq_anf$##7205759403793676218 :: "[GHC.Types.Char] -> [GHC.Types.Char]"
12:23-12:82::lq_anf$##7205759403793676223 :: "[GHC.Types.Char]"
12:24-12:43::lq_anf$##7205759403793676220 :: "[GHC.Types.Char]"
12:47-12:81::lq_anf$##7205759403793676222 :: "[GHC.Types.Char]"
12:52-12:81::lq_anf$##7205759403793676221 :: "{v : GHC.Types.Bool | v == isJust okRemove}"
12:60-12:80::LHExercises.okRemove :: "{v : (GHC.Maybe.Maybe (GHC.Num.Integer.Integer, {v : (LHExercises.Queue GHC.Num.Integer.Integer) | qsize v == 1})) | v == okRemove}"
13:8-13:35::lq_anf$##7205759403793676225 :: "{v : GHC.Types.Bool | v == isJust okRemove}"
13:15-13:35::LHExercises.okRemove :: "{v : (GHC.Maybe.Maybe (GHC.Num.Integer.Integer, {v : (LHExercises.Queue GHC.Num.Integer.Integer) | qsize v == 1})) | v == okRemove}"
14:14-14:101::GHC.Base.. :: "{VV : forall a\n             b\n             c <r##12##29 :: c b -> Bool, q##12##29 :: c c -> Bool, p##12##29 :: c b -> Bool>.\n      {xcmp :: c, wcmp :: {VV : c<q##12##29 xcmp> | true} |- {VV : b<p##12##29 wcmp> | true} <: {VV : b<r##12##29 xcmp> | true}} =>\n      (ycmp:c -> {VV : b<p##12##29 ycmp> | true}) -> (zcmp:c -> {VV : c<q##12##29 zcmp> | true}) -> xcmp:c -> {VV : b<r##12##29 xcmp> | true} | VV == .}"
14:15-14:23::System.IO.putStrLn :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
14:26-14:30::lq_anf$##7205759403793676233 :: "[GHC.Types.Char] -> [GHC.Types.Char]"
14:32-14:101::lq_anf$##7205759403793676239 :: "[GHC.Types.Char]"
14:33-14:54::lq_anf$##7205759403793676235 :: "[GHC.Types.Char]"
14:58-14:100::lq_anf$##7205759403793676238 :: "[GHC.Types.Char]"
14:63-14:100::lq_anf$##7205759403793676237 :: "GHC.Num.Integer.Integer"
14:68-14:99::lq_anf$##7205759403793676236 :: "(GHC.Num.Integer.Integer, (LHExercises.Queue GHC.Num.Integer.Integer))"
14:78-14:98::LHExercises.okRemove :: "{v : (GHC.Maybe.Maybe (GHC.Num.Integer.Integer, {v : (LHExercises.Queue GHC.Num.Integer.Integer) | qsize v == 1})) | v == okRemove}"
15:10-15:93::GHC.Base.. :: "{VV : forall a\n             b\n             c <r##12##29 :: c b -> Bool, q##12##29 :: c c -> Bool, p##12##29 :: c b -> Bool>.\n      {xcmp :: c, wcmp :: {VV : c<q##12##29 xcmp> | true} |- {VV : b<p##12##29 wcmp> | true} <: {VV : b<r##12##29 xcmp> | true}} =>\n      (ycmp:c -> {VV : b<p##12##29 ycmp> | true}) -> (zcmp:c -> {VV : c<q##12##29 zcmp> | true}) -> xcmp:c -> {VV : b<r##12##29 xcmp> | true} | VV == .}"
15:11-15:19::System.IO.putStrLn :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
15:22-15:26::lq_anf$##7205759403793676227 :: "[GHC.Types.Char] -> [GHC.Types.Char]"
15:28-15:93::lq_anf$##7205759403793676232 :: "[GHC.Types.Char]"
15:29-15:51::lq_anf$##7205759403793676229 :: "[GHC.Types.Char]"
15:55-15:92::lq_anf$##7205759403793676231 :: "[GHC.Types.Char]"
15:60-15:92::lq_anf$##7205759403793676230 :: "{v : GHC.Types.Bool | not (isJust okRemove == v)}"
15:71-15:91::LHExercises.okRemove :: "{v : (GHC.Maybe.Maybe (GHC.Num.Integer.Integer, {v : (LHExercises.Queue GHC.Num.Integer.Integer) | qsize v == 1})) | v == okRemove}"
16:5-16:90::lq_anf$##7205759403793676248 :: "(GHC.Types.IO ())"
16:6-16:14::System.IO.putStrLn :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
16:17-16:21::lq_anf$##7205759403793676241 :: "[GHC.Types.Char] -> [GHC.Types.Char]"
16:23-16:90::lq_anf$##7205759403793676247 :: "[GHC.Types.Char]"
16:24-16:47::lq_anf$##7205759403793676243 :: "[GHC.Types.Char]"
16:51-16:89::lq_anf$##7205759403793676246 :: "[GHC.Types.Char]"
16:56-16:89::lq_anf$##7205759403793676245 :: "GHC.Types.Bool"
16:67-16:88::_ :: "{VV : forall a .\n      (GHC.Maybe.Maybe (a, (LHExercises.Queue a))) | VV == badRemove}"