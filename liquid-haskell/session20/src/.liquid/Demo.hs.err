{"o_vars":null,"o_types":[[{"realSpan":true,"spanInfo":{"endCol":1,"endLine":1,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":1}},[["Demo.$trModule","GHC.Types.Module"]]],[{"realSpan":true,"spanInfo":{"endCol":15,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":7}},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"realSpan":true,"spanInfo":{"endCol":11,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":10,"startLine":7}},[["x","{v : GHC.Types.Int | v == x\n                     && 0 < v}"]]],[{"realSpan":true,"spanInfo":{"endCol":7,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":6,"startLine":7}},[["x","{VV : GHC.Types.Int | 0 < VV}"]]],[{"realSpan":true,"spanInfo":{"endCol":5,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":7}},[["Demo.incr","{VV : GHC.Types.Int | 0 < VV} -> {VV : GHC.Types.Int | 0 < VV}"]]],[{"realSpan":true,"spanInfo":{"endCol":15,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":14,"startLine":7}},[["lq_anf$##7205759403792838890","GHC.Types.Int"]]]],"o_templs":[[{"realSpan":true,"spanInfo":{"endCol":1,"endLine":1,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":1}},[["Demo.$trModule","{VV##248 : GHC.Types.Module | $k_##249}"]]],[{"realSpan":true,"spanInfo":{"endCol":15,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":7}},[["GHC.Num.$fNumInt","{lq_tmp$x##244 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##244 == GHC.Num.$fNumInt}"]]],[{"realSpan":true,"spanInfo":{"endCol":11,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":10,"startLine":7}},[["x","{lq_tmp$x##245 : GHC.Types.Int | lq_tmp$x##245 == x##abMa\n                                 && 0 < lq_tmp$x##245}"]]],[{"realSpan":true,"spanInfo":{"endCol":7,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":6,"startLine":7}},[["x","{VV##0 : GHC.Types.Int | 0 < VV##0}"]]],[{"realSpan":true,"spanInfo":{"endCol":5,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":7}},[["Demo.incr","lq_tmp$x##221:{VV##0 : GHC.Types.Int | 0 < VV##0} -> {VV##0 : GHC.Types.Int | 0 < VV##0}"]]],[{"realSpan":true,"spanInfo":{"endCol":15,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":14,"startLine":7}},[["lq_anf$##7205759403792838890","{lq_tmp$x##226 : GHC.Types.Int | lq_tmp$x##226 == (lq_anf$##7205759403792838889##dbMt : int)}"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"numCstr":1,"numIter":1,"numBrkt":1,"numChck":1,"numVald":0},[{"msg":"Liquid Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Types.Int | v == x - (1 : int)}\n    .\n    is not a subtype of the required type\n      VV : {VV : GHC.Types.Int | 0 < VV}\n    .\n    in the context\n      x : {v : GHC.Types.Int | 0 < v}\n    Constraint id 2","pos":{"realSpan":true,"spanInfo":{"endCol":15,"endLine":7,"filename":"/home/alvarorp00/Documents/uam/master/verification/liquid-haskell/session20/src/Demo.hs","startCol":1,"startLine":7}}}]]}}