{"errors":[],"sptypes":[{"ann":"GHC.Types.Module","ident":"Demo.Client.$trModule","start":{"column":1,"line":1},"stop":{"column":1,"line":1}},{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"Demo.Client.bump","start":{"column":1,"line":12},"stop":{"column":5,"line":12}},{"ann":"GHC.Types.Int","ident":"n","start":{"column":6,"line":12},"stop":{"column":7,"line":12}},{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","start":{"column":13,"line":12},"stop":{"column":14,"line":12}},{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792808873","start":{"column":17,"line":12},"stop":{"column":18,"line":12}},{"ann":"{v : GHC.Types.Int | 0 < v} -> {v : GHC.Types.Int | 0 < v}","ident":"Demo.Lib.incr","start":{"column":24,"line":12},"stop":{"column":30,"line":12}},{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","start":{"column":29,"line":12},"stop":{"column":30,"line":12}},{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792808876","start":{"column":36,"line":12},"stop":{"column":37,"line":12}},{"ann":"x1:Demo.Client.Simple -> {VV : (GHC.Maybe.Maybe GHC.Types.Bool) | VV == test x1}","ident":"Demo.Client.test","start":{"column":1,"line":18},"stop":{"column":5,"line":18}},{"ann":"{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | v == Just x1\n                                         && lqdc##$select v == x1} | VV == Just}","ident":"GHC.Maybe.Just","start":{"column":10,"line":18},"stop":{"column":19,"line":18}},{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","start":{"column":15,"line":18},"stop":{"column":19,"line":18}},{"ann":"{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | v == Nothing} | VV == Nothing}","ident":"_","start":{"column":10,"line":19},"stop":{"column":17,"line":19}},{"ann":"{VV : () | test A == Just true}","ident":"Demo.Client.testProof","start":{"column":1,"line":23},"stop":{"column":10,"line":23}},{"ann":"{v : (GHC.Maybe.Maybe GHC.Types.Bool) | v == test A}","ident":"lq_anf$##7205759403792808844","start":{"column":3,"line":24},"stop":{"column":9,"line":24}},{"ann":"{v : Demo.Client.Simple | v == A}","ident":"Demo.Client.A","start":{"column":8,"line":24},"stop":{"column":9,"line":24}},{"ann":"{v : (GHC.Maybe.Maybe GHC.Types.Bool) | v == Just True\n                                        && lqdc##$select v == True}","ident":"lq_anf$##7205759403792808845","start":{"column":14,"line":24},"stop":{"column":23,"line":24}},{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","start":{"column":19,"line":24},"stop":{"column":23,"line":24}},{"ann":"{v : Language.Haskell.Liquid.Equational.QED | v == QED}","ident":"Language.Haskell.Liquid.Equational.QED","start":{"column":7,"line":25},"stop":{"column":10,"line":25}}],"status":"safe","types":{"1":{"1":{"ann":"GHC.Types.Module","col":1,"ident":"Demo.Client.$trModule","row":1}},"12":{"1":{"ann":"GHC.Types.Int -> GHC.Types.Int","col":1,"ident":"Demo.Client.bump","row":12},"13":{"ann":"{v : GHC.Types.Int | v == n}","col":13,"ident":"n","row":12},"17":{"ann":"GHC.Types.Int","col":17,"ident":"lq_anf$##7205759403792808873","row":12},"24":{"ann":"{v : GHC.Types.Int | 0 < v} -> {v : GHC.Types.Int | 0 < v}","col":24,"ident":"Demo.Lib.incr","row":12},"29":{"ann":"{v : GHC.Types.Int | v == n}","col":29,"ident":"n","row":12},"36":{"ann":"{v : GHC.Prim.Int# | v == 0}","col":36,"ident":"lq_anf$##7205759403792808876","row":12},"6":{"ann":"GHC.Types.Int","col":6,"ident":"n","row":12}},"18":{"1":{"ann":"x1:Demo.Client.Simple -> {VV : (GHC.Maybe.Maybe GHC.Types.Bool) | VV == test x1}","col":1,"ident":"Demo.Client.test","row":18},"10":{"ann":"{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | v == Just x1\n                                         && lqdc##$select v == x1} | VV == Just}","col":10,"ident":"GHC.Maybe.Just","row":18},"15":{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","col":15,"ident":"GHC.Types.True","row":18}},"19":{"10":{"ann":"{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | v == Nothing} | VV == Nothing}","col":10,"ident":"_","row":19}},"23":{"1":{"ann":"{VV : () | test A == Just true}","col":1,"ident":"Demo.Client.testProof","row":23}},"24":{"14":{"ann":"{v : (GHC.Maybe.Maybe GHC.Types.Bool) | v == Just True\n                                        && lqdc##$select v == True}","col":14,"ident":"lq_anf$##7205759403792808845","row":24},"19":{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","col":19,"ident":"GHC.Types.True","row":24},"3":{"ann":"{v : (GHC.Maybe.Maybe GHC.Types.Bool) | v == test A}","col":3,"ident":"lq_anf$##7205759403792808844","row":24},"8":{"ann":"{v : Demo.Client.Simple | v == A}","col":8,"ident":"Demo.Client.A","row":24}},"25":{"7":{"ann":"{v : Language.Haskell.Liquid.Equational.QED | v == QED}","col":7,"ident":"Language.Haskell.Liquid.Equational.QED","row":25}}}}