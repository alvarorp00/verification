1:1-1:1::Demo.Lib.$trModule :: "GHC.Types.Module"
9:1-9:5::Demo.Lib.incr :: "{VV : GHC.Types.Int | 0 < VV} -> {VV : GHC.Types.Int | 0 < VV}"
9:6-9:7::x :: "{VV : GHC.Types.Int | 0 < VV}"
9:10-9:11::x :: "{v : GHC.Types.Int | v == x\n                     && 0 < v}"
9:14-9:15::lq_anf$##7205759403792801874 :: "GHC.Types.Int"
14:1-14:5::Demo.Lib.elts :: "forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : (Data.Set.Internal.Set a) | VV == elts x2}"
14:15-14:20::_ :: "{VV : forall a .\n      {v : (Data.Set.Internal.Set a) | Set_emp v} | VV == empty}"
15:15-15:26::lq_anf$##7205759403792801864 :: "{v : (Data.Set.Internal.Set a) | v == Set_sng x}"
15:25-15:26::x :: "{VV : a | VV == x}"
15:35-15:42::lq_anf$##7205759403792801865 :: "{v : (Data.Set.Internal.Set a) | v == elts xs}"
15:40-15:42::xs :: "{v : [a] | v == xs\n           && len v >= 0}"
19:1-19:4::Demo.Lib.rev :: "forall a . x1:[a] -> {v : [a] | elts v == elts x1}"
19:7-19:12::lq_anf$##7205759403792801868 :: "{v : [a] | Set_emp (listElts v)\n           && elts v == Set_empty 0\n           && len v == 0}"
19:10-19:12::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                                  && elts v == Set_empty 0\n                                                  && len v == 0} | VV == []}"
22:5-22:7::go :: "x1:{VV : [a] | len VV >= 0} -> x2:{VV : [a] | len VV >= 0} -> {v : [a] | elts v == Set_cup (elts x1) (elts x2)}"
22:8-22:11::acc :: "{VV : [a] | len VV >= 0}"
22:21-22:24::acc :: "{v : [a] | v == acc\n           && len v >= 0}"
23:21-23:34::go :: "x1:{VV : [a] | len VV >= 0} -> x2:{VV : [a] | len VV >= 0} -> {v : [a] | elts v == Set_cup (elts x1) (elts x2)}"
23:24-23:31::lq_anf$##7205759403792801867 :: "{v : [a] | elts v == Set_cup (Set_sng x) (elts acc)\n           && head v == x\n           && len v == 1 + len acc\n           && listElts v == Set_cup (Set_sng x) (listElts acc)\n           && tail v == acc}"
23:25-23:26::x :: "{VV : a | VV == x}"
23:27-23:30::acc :: "{v : [a] | v == acc\n           && len v >= 0}"
23:32-23:34::xs :: "{v : [a] | v == xs\n           && len v >= 0}"